#!/usr/bin/env zsh
# vi: ft=zsh

# --- Path ---

# -- Prepend --

# Put the Ruby OneClick Installer install at the front, the ruby shipped with
# gitsdk has issues with newlines in irb and pry
prepend_to_path 'C:\tools\ruby\ridk\current\bin'

prepend_to_path 'C:\tools\packer\current'

prepend_to_path 'C:\tools\kubeval\current'

# ADB and fastboot
prepend_to_path 'C:\tools\android-platform-tools\current'

prepend_to_path 'C:\tools\kube-score\current'

prepend_to_path 'C:\tools\sops\current'

# Tool used for optimizing PNG images
prepend_to_path 'C:\tools\optipng\current'

# Tool used for deduping
prepend_to_path 'C:\tools\jdupes\current'

# Imagemagick!
prepend_to_path 'C:\Program Files\ImageMagick-7.0.10-Q16'

# Compiled mozjpeg static exes
prepend_to_path 'C:\tools\mozjpeg\current-static'

# Hash tools
prepend_to_path 'C:\tools\hashcat\current'
prepend_to_path 'C:\tools\john-the-ripper\current\run'

# -- Append --

# We want IIS Express!
append_to_path 'C:\Program Files (x86)\IIS Express\'

# Adb for android debugging
# append_to_path 'C:\Users\tscheffert\AppData\Local\Android\android-sdk\platform-tools'

# Python Scripts including pip
append_to_path 'C:\tools\python\Scripts'

# Xmllint from libxml2
append_to_path 'C:\tools\xmllint'

# Add ConEmuBaseDir to the path for csudo.cmd
append_to_path '$ConEmuBaseDir'

# Git repo encryption utility
append_to_path 'C:\Projects\github\elasticdog\transcrypt'

# Enable porcelain like git filter-branch to work
append_to_path 'C:\git-sdk-64\mingw64\libexec\git-core'

# Helm CLI
append_to_path 'C:\tools\helm\current'

# Temporarily add helm2 binary to ease migration
append_to_path 'C:\tools\helm\2.16.1'

# --- Aliases ---

alias irb-windows='winpty "C:\tools\ruby\ridk\current\bin\irb.cmd"'

alias csudo='csudo.cmd'

# TODO: This works with `open .` but not `open /path/to/place` :*(
alias open='start'

# TODO: Maybe set up in function files like I have other stuff?
# TODO: Get this working
# function explorer() {
#   local destination = "$@"
#   if [[ $@ == '' ]]; then
#     destination="./"
#   fi
#   explorer.exe "$(to_windows_path $destination)"
# }

alias 'powershell_split'='ConEmu64 -run powershell -new_console:asV'

# BFG Git Repo Cleaner usage
alias bfg='java -jar C:/tools/bfg/current/bfg.jar'


# TODO: Powershell split for kubernetes exec

# -- PowerShell Aliases/Functions --
function ps-lint() {
  local ps_file="${1:?You must specify a file to lint}"

  if [[ ! -f "$ps_file" ]]; then
    echo 1>&2 "Target file $ps_file doesn't exist"
    return 1
  fi

  # Invoke the PSScriptAnalyzer, which is installed via PowerShell Gallery
  powershell -Command "Invoke-ScriptAnalyzer -Path $ps_file"
}

function ps-beautify() {
  local ps_file="${1:?You must specify a file to beautify}"

  if [[ ! -f "$ps_file" ]]; then
    echo 1>&2 "Target file $ps_file doesn't exist"
    return 1
  fi

  # Invoke the beautify function defined in my PowerShell profile
  powershell -Command "Edit-BeautifyFile $ps_file"

  # The beautify file leaves it with CRLF line endings
  dos2unix "$ps_file"
}


# --- Exports ---

# Set the temp folder environment variables to actually work. Not the usual temp folder, but oh well.
export tmp="$(cygpath -m "/tmp")"
export TMP="$(cygpath -m "$TMP")"
export TEMP="$(cygpath -m "$TEMP")"
export TMPDIR="$(cygpath -m "$TMPDIR")"

# Set TERM, for compatability with stuff
export TERM='xterm-256color'
