# ----- Custom -----
# AWS ElasticBeanstalk generated files
.elasticbeanstalk/

# SQLite Databse
*.sqlite

# Generated tags for ruby projects
components/*/*/tags
components/*/tags

# RSpec status file
.rspec_status

# vim-projectionist project configs
.projections.json

.rubocop_todo.yml

# ----- DotFiles -----
# Ignore bundles. Neobundle is already in there and managed, everything
#   else we can safely ignore.
vimfiles/bundle/

# Ignore plug.vim which curl down to install for vim-plug
vimfiles/autoload/plug.vim
vimfiles/autoload/plug.vim.old

# Ignore the generated backup Stuff
vimfiles/tmp/

# Binary index of additional spelling words, rebuilt on-demand
vimfiles/spell/*.spl

# Ignore local and private configs
.zshrc.private
.zshrc.local

# Ignore old plugins ettings
vimfiles/old/

# Local, unsynced, Alfred preferences
Alfred/Alfred.alfredpreferences/preferences/local/

!./bin/

.config/karabiner/
!.config/karabiner/karabiner.json

fonts/Input-Font/

# devtools executable and autocomplete helpers
bin/devtools
zsh/functions/completions/_devtools

# ----- Default...? -----
.DS_Store
._*
.svn
.hg
.*.swp


# The following from https://github.com/github/gitignore
# ----- Vim -----
[._]*.s[a-w][a-z]
[._]s[a-w][a-z]
*.un~
Session.vim
.netrwhist
# ripper-tags auto generates tags for engines. Usually they're in .git/ but engines aren't
components/**/tags


# ----- Windows -----
# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msm
*.msp


# ----- C++ -----
# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app


# ----- C -----
# Object files
*.o
*.ko
*.obj
*.elf

# Libraries
*.lib
*.a

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex


# ----- Haskell -----
dist
cabal-dev
*.o
*.hi
*.chi
*.chs.h
.virtualenv
.hsenv
.cabal-sandbox/
cabal.sandbox.config
cabal.config


# ----- Unity 3D ----
[Ll]ibrary/
[Tt]emp/
[Oo]bj/

# Autogenerated VS/MD solution and project files
/*.unityproj
/*.user
/*.userprefs
/*.pidb
/*.booproj-


# ----- Visual Studio -----
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.sln.docstates

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
x64/
build/
bld/
[Bb]in/
[Oo]bj/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

#NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf
*.cachefile

# Visual Studio profiler
*.psess
*.vsp
*.vspx

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding addin-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
## TODO: Comment the next line if you want to checkin your web deploy settings but do note that will include unencrypted passwords
*.pubxml

# NuGet Packages Directory
packages/*
## TODO: If the tool you use requires repositories.config uncomment the next line
#!packages/repositories.config

# Enable "build/" folder in the NuGet Packages folder since NuGet packages use it for MSBuild targets
# This line needs to be after the ignore of the build folder (and the packages folder if the line above has been uncommented)
!packages/build/

# Windows Azure Build Output
csx/
*.build.csdef

# Windows Store app package directory
AppPackages/

# Others
sql/
*.Cache
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
node_modules/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file to a newer
# Visual Studio version. Backup files are not needed, because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/


# ----- Yeomen -----
node_modules/
bower_components/
*.log

build/
dist/

# ----- Explicit Include -----
!bin/
/*/**/bin/ # Ignore all bins but the "root directory" bin folder
